{"version":3,"sources":["config/history.ts","config/axios.ts","redux/actions.ts","redux/actionTypes.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Index/Index.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","redux/reducers/index.ts","redux/reducers/todos.ts","redux/store.ts","index.tsx"],"names":["history","createBrowserHistory","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","updateTodo","payload","type","TodoInput","props","addTodo","a","post","description","state","data","resource","Error","setState","this","suffix","onClick","id","placeholder","value","onPressEnter","onChange","e","target","Component","mapDispatchToProps","connect","ownProps","TodoItem","params","put","editTodo","onKeyUp","keyCode","editText","editing","className","deleted","text","onDoubleClick","todoItemClass","classNames","completed","style","marginRight","checked","Todos","getTodos","get","todos","resources","map","item","Object","assign","initTodos","unCompletedTodos","key","completedTodos","filter","unDeletedTodos","menu","Item","Index","getMe","user","log","overlay","account","marginLeft","withRouter","Login","onChangeAccount","onChangePassword","password","submit","prefix","color","Password","to","React","SignUp","onChangePasswordConformation","passwordConformation","password_confirmation","App","exact","path","Boolean","window","location","hostname","match","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c8b0afc3.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;","import axios from 'axios';\r\nimport history from './history';\r\nconst appID = \"b7u5og7z2mpu6LzWniQnYnR9\";\r\nconst appSecret = \"mrbx74x6kvDBHqMsZLskRac1\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\n// 拦截器， 对get请求进行预处理\r\ninstance.interceptors.request.use(function (config) {\r\n  const xToken = localStorage.getItem('x-token');\r\n  if (xToken) {\r\n    config.headers['Authorization'] = `Bearer ${xToken}`;\r\n  }\r\n  return config;\r\n}, function (error) {\r\n  console.error(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// 拦截器，对post返回数据进行预处理\r\ninstance.interceptors.response.use(function (response) {\r\n  // Do something with response data\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token']);\r\n  }\r\n  return response;\r\n}, function (error) {\r\n  if (error.response.status === 401) {\r\n    history.push('login');\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default instance;","import { ADD_TODO, INIT_TODOS, EDIT_TODO, UPDATE_TODO } from './actionTypes';\r\nexport const addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const initTodos = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\n","import React, { Component } from 'react';\r\nimport { Input, Icon } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../../redux/actions';\r\nimport axios from '../../config/axios';\r\n\r\ninterface ITodoInputState {\r\n  description: string;\r\n}\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: any) => any;\r\n}\r\nclass TodoInput extends Component<ITodoInputProps, ITodoInputState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n  addTodo = async () => {\r\n    try {\r\n      let response = await axios.post('todos', { description: this.state.description });\r\n      this.props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n    // this.props.addTodo({ description: this.state.description });\r\n    this.setState({ description: '' });\r\n  };\r\n  render() {\r\n    const { description } = this.state;\r\n    const suffix = description ? <Icon type=\"enter\" onClick={this.addTodo} /> : <span />;\r\n    return (\r\n      <div id=\"TodoInput\">\r\n        <Input\r\n          placeholder=\"添加待办事项 . . .\"\r\n          suffix={suffix}\r\n          value={description}\r\n          onPressEnter={this.addTodo}\r\n          onChange={(e) => this.setState({ description: e.target.value })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  // todos: state.todos,\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","import React, { Component } from 'react';\r\nimport { Checkbox, Icon } from 'antd';\r\nimport './todoitem.scss';\r\nimport axios from '../../config/axios';\r\nimport classNames from 'classnames';\r\nimport { editTodo, updateTodo } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface ITodoItemProps {\r\n  id: number;\r\n  description: string;\r\n  completed: boolean;\r\n  editing: boolean;\r\n  editTodo: (id: number) => any;\r\n  updateTodo: (payload: any) => any;\r\n}\r\ninterface ITodoItemState {\r\n  editText: string;\r\n}\r\n\r\n\r\nclass TodoItem extends Component<ITodoItemProps, ITodoItemState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description\r\n    };\r\n  }\r\n\r\n  updateTodo = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  editTodo = () => {\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTodo({ description: this.state.editText });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const editing = (\r\n      <div className=\"editing\">\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.editText}\r\n          onChange={e => this.setState({ editText: e.target.value })}\r\n          onKeyUp={this.onKeyUp}\r\n        />\r\n        <div className=\"iconWrapper\">\r\n          <Icon type=\"enter\" />\r\n          <Icon type=\"delete\" onClick={e => this.updateTodo({ deleted: true })} />\r\n        </div>\r\n      </div>\r\n    );\r\n    const text = <span className=\"text\" onDoubleClick={this.editTodo}>{this.props.description}</span>;\r\n    const todoItemClass = classNames({\r\n      TodoItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    });\r\n\r\n    return (\r\n      < div id=\"TodoItem\" className={todoItemClass}>\r\n        <Checkbox\r\n          style={{ marginRight: 8 }}\r\n          checked={this.props.completed}\r\n          onChange={e => this.updateTodo({ completed: e.target.checked })}\r\n        />\r\n        {\r\n          this.props.editing ? editing : text\r\n        }\r\n      </div >\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  editTodo, updateTodo\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import React, { Component } from 'react';\r\nimport TodoInput from './TodoInput';\r\nimport axios from '../../config/axios';\r\nimport './todos.scss';\r\nimport TodoItem from './TodoItem';\r\nimport { connect } from 'react-redux';\r\nimport { initTodos, updateTodo } from '../../redux/actions';\r\n\r\n\r\nclass Todos extends Component<any> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // }\r\n  get unDeletedTodos() {\r\n    return this.props.todos.filter((item: any) => !item.deleted);\r\n  }\r\n  get unCompletedTodos() {\r\n    return this.unDeletedTodos.filter((item: any) => !item.completed);\r\n  }\r\n  get completedTodos() {\r\n    return this.unDeletedTodos.filter((item: any) => item.completed);\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos');\r\n      const todos = response.data.resources.map((item: any) => Object.assign({}, item, { editing: false }));\r\n      this.props.initTodos(todos);\r\n      // this.setState({ todos });\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.getTodos();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div id=\"Todos\">\r\n        <TodoInput />\r\n        <div className=\"todoList\">\r\n          {this.unCompletedTodos.map((item: any) => {\r\n            return (\r\n              <TodoItem key={item.id} {...item} />\r\n            );\r\n          })\r\n          }\r\n          {this.completedTodos.map((item: any) => {\r\n            return (\r\n              <TodoItem key={item.id} {...item} />\r\n            );\r\n          })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  updateTodo,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import React, { Component } from 'react';\r\nimport { Dropdown, Icon, Menu } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport history from '../../config/history';\r\nimport axios from '../../config/axios';\r\nimport './Index.scss';\r\nimport Todos from '../Todos/Todos';\r\n\r\ninterface IIndexState {\r\n  user: any;\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '');\r\n  history.push('/login');\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\">\r\n      <Icon type=\"user\" />\r\n      个人设置\r\n    </Menu.Item>\r\n    <Menu.Item key=\"2\" onClick={logout}>\r\n      <Icon type=\"logout\" />\r\n      注销\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\n\r\nclass Index extends Component<any, IIndexState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: ''\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getMe();\r\n  }\r\n\r\n  getMe = async () => {\r\n    try {\r\n      const response = await axios.get('me');\r\n      this.setState({ user: response.data }\r\n      );\r\n      console.log(response);\r\n    } catch (e) { }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Index\" id=\"Index\">\r\n        <header>\r\n          <span className=\"logo\">TomatoDo — 在线待办事项工具</span>\r\n          <Dropdown overlay={menu}>\r\n            <span>{this.state.user && this.state.user.account}\r\n              <Icon type=\"down\" style={{ marginLeft: 8 }} />\r\n            </span>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Todos />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Index);","import React from 'react';\r\nimport { Input, Button, Icon } from 'antd';\r\nimport axios from '../../config/axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './login.scss';\r\n\r\ninterface ILoginState {\r\n  account: string;\r\n  password: string,\r\n}\r\n\r\nclass Login extends React.Component<any, ILoginState> {//第一个参数是prop类型， 第二个参数是state类型\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    };\r\n  }\r\n  onChangeAccount = (e: any) => {\r\n    this.setState({ account: e.target.value });\r\n  };\r\n  onChangePassword = (e: any) => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  submit = async () => {\r\n    const { account, password } = this.state;\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account,\r\n        password,\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  render() {\r\n    const { account, password } = this.state;\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h2>番茄闹钟 - 登录</h2>\r\n        <Input\r\n          placeholder=\"输入你的用户名\"\r\n          value={account}\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          onChange={this.onChangeAccount}\r\n        />\r\n        <Input.Password placeholder=\"请输入密码\" value={password} onChange={this.onChangePassword} />\r\n        <Button type=\"primary\" className=\"loginBtn\" onClick={this.submit}> 登录</Button>\r\n        <p>如果没有账号，请立即<Link to=\"/signUp\">注册</Link></p>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Login);","import React from 'react';\r\nimport { Input, Button, Icon } from 'antd';\r\nimport axios from '../../config/axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './signup.scss';\r\n\r\ninterface ISignUpState {\r\n  account: string;\r\n  password: string,\r\n  passwordConformation: string;\r\n}\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {//第一个参数是prop类型， 第二个参数是state类型\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConformation: ''\r\n    };\r\n  }\r\n  onChangeAccount = (e: any) => {\r\n    this.setState({ account: e.target.value });\r\n  };\r\n  onChangePassword = (e: any) => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n  onChangePasswordConformation = (e: any) => {\r\n    this.setState({ passwordConformation: e.target.value });\r\n  };\r\n  submit = async () => {\r\n    const { account, password, passwordConformation } = this.state;\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        account,\r\n        password,\r\n        password_confirmation: passwordConformation\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  render() {\r\n    const { account, password, passwordConformation } = this.state;\r\n    return (\r\n      <div className=\"SignUp\" id=\"SignUp\">\r\n        <h2>番茄闹钟 - 注册</h2>\r\n        <Input\r\n          placeholder=\"输入你的用户名\"\r\n          value={account}\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          onChange={this.onChangeAccount}\r\n        />\r\n        <Input.Password placeholder=\"请输入密码\" value={password} onChange={this.onChangePassword} />\r\n        <Input.Password placeholder=\"请再次输入密码\" value={passwordConformation} onChange={this.onChangePasswordConformation} />\r\n        <Button type=\"primary\" className=\"signUpBtn\" onClick={this.submit}> 注册</Button>\r\n        <p>如果已有账号，请立即<Link to=\"/login\">登录</Link></p>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default withRouter(SignUp);","import React, { Component } from 'react';\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport Index from './components/Index/Index';\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport history from './config/history';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n\n          {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">index</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n          </ul>\n        </nav> */}\n\n          <Switch>\n            {/* 首页 */}\n            <Route exact={true} path=\"/\">\n              <Index></Index>\n            </Route>\n\n            <Route path=\"/login\">\n              <Login></Login>\n            </Route>\n\n            <Route path=\"/signUp\">\n              <SignUp ></SignUp>\n            </Route>\n\n          </Switch>\n\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport todos from './todos';\r\n\r\nexport default combineReducers({ todos });","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from '../actionTypes';\r\n\r\n\r\ninterface Action {\r\n  type: string;\r\n  payload: any;\r\n}\r\nexport default (state: any[] = [], action: Action): any => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map((item: any) => {\r\n        if (item.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map((item: any) => {\r\n        if (item.id === action.payload) {\r\n          return Object.assign({}, item, { editing: true });\r\n        } else {\r\n          return Object.assign({}, item, { editing: false });\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}